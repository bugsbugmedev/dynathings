{"version":17,"variables":[{"key":"Service","visible":true,"type":"query","version":1,"editable":true,"input":"fetch dt.entity.service \n| filterOut matchesPhrase(entity.name, \"background\") or matchesPhrase(entity.name, \"SpringBoot\")  or contains(entity.name, \"Health\")\n| fields service = entity.name\n| sort service, direction:\"ascending\"\n| summarize distinctServices = collectDistinct(service)\n| fields values = arrayRemoveNulls(array(\"ALL\", distinctServices))","multiple":false}],"tiles":{"0":{"type":"data","title":"Saturation - Process Memory Usage %","query":"timeseries usage=avg(dt.process.memory.usage),\n    by:{dt.entity.process_group_instance}\n| lookup [fetch dt.entity.process_group_instance | fields id, serviceId=runs[dt.entity.service], belongs_to], sourceField:dt.entity.process_group_instance, lookupField:id\n| filter isNotNull(lookup.serviceId)\n| expand lookup.serviceId\n| lookup [fetch dt.entity.service | fields id, entity.name], sourceField:lookup.serviceId, lookupField:id\n| filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| sort arrayAvg(usage) desc\n| limit 20\n| lookup [fetch dt.entity.process_group_instance],sourceField:dt.entity.process_group_instance,lookupField:id,fields:{dt.entity.process_group_instance.name=entity.name}\n| fields timeframe, interval, dt.entity.process_group_instance.name, usage\n| sort usage desc\n","visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"legend":{"hidden":true},"leftYAxisSettings":{"isLabelVisible":true,"label":"Process memory usage","min":"auto","max":"auto"},"categoricalBarChartSettings":{"categoryAxis":["dt.entity.process_group_instance.name"],"categoryAxisLabel":"dt.entity.process_group_instance.name","valueAxis":["interval"],"valueAxisLabel":"interval","tooltipVariant":"single"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"]},"hiddenLegendFields":["dt.entity.process_group_instance","interval"],"valueRepresentation":"absolute","xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"dt.entity.process_group_instance.name","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"dt.entity.process_group_instance.name","trend":{"trendType":"auto","isVisible":true}},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["lookup.managementZones"],["lookup.id"],["dt.entity.host"]],"lineWrapIds":[["usage"]],"columnWidths":{},"columnTypeOverrides":[{"fields":["usage"],"value":"sparkline","id":1734469212805}]},"honeycomb":{"shape":"square","dataMappings":{"value":"dt.entity.process_group_instance.name"},"displayedFields":["dt.entity.process_group_instance.name"],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}],"variant":"single","displayedFields":["dt.entity.process_group_instance.name"]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"dt.host.cpu.usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532826},{"identifier":"dt.host.memory.avail.percent","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532826},{"identifier":"dt.host.memory.usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532826},{"identifier":"usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532826}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"1":{"type":"data","title":"Saturation - Process CPU Usage %","query":"timeseries usage=avg(dt.process.cpu.usage),\n    by:{dt.entity.process_group_instance}\n// | lookup [fetch dt.entity.process_group_instance | fields id, runs, belongs_to, mz=managementZones], sourceField:dt.entity.process_group_instance, lookupField:id\n// | filter matchesValue(lookup.mz,\"EasyTrade\")\n// //| lookup [fetch dt.entity.process_group_instance | fields id, runs, belongs_to, mz=managementZones], sourceField:dt.entity.process_group_instance, lookupField:id\n// //| filter (\"ALL\" == $Service OR $Service ==  toString(belongs_to))\n//| filter isNotNull(lookup.runs)\n| lookup [fetch dt.entity.process_group_instance | fields id, serviceId=runs[dt.entity.service], belongs_to], sourceField:dt.entity.process_group_instance, lookupField:id\n| filter isNotNull(lookup.serviceId)\n| expand lookup.serviceId\n| lookup [fetch dt.entity.service | fields id, entity.name], sourceField:lookup.serviceId, lookupField:id\n| filter in($Service , \"ALL\") OR in(lookup.entity.name, $Service)\n| sort arrayAvg(usage) desc\n| limit 20\n| lookup [fetch dt.entity.process_group_instance],sourceField:dt.entity.process_group_instance,lookupField:id,fields:{dt.entity.process_group_instance.name=entity.name}\n| fields timeframe, interval, dt.entity.process_group_instance.name, usage\n| sort usage desc\n","visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"auto","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"legend":{"hidden":true},"categoricalBarChartSettings":{"categoryAxis":["dt.entity.process_group_instance.name"],"categoryAxisLabel":"dt.entity.process_group_instance.name","valueAxis":["interval"],"valueAxisLabel":"interval","tooltipVariant":"single"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["usage"]},"hiddenLegendFields":["dt.entity.process_group_instance","interval"],"valueRepresentation":"absolute","xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{"isLabelVisible":true,"label":"Process CPU usage"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"dt.entity.process_group_instance.name","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"dt.entity.process_group_instance.name","trend":{"trendType":"auto","isVisible":true}},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["lookup.managementZones"],["lookup.id"],["dt.entity.host"]],"lineWrapIds":[["usage"]],"columnWidths":{},"columnTypeOverrides":[{"fields":["usage"],"value":"sparkline","id":1734469211671}]},"honeycomb":{"shape":"square","dataMappings":{"value":"dt.entity.process_group_instance.name"},"displayedFields":["dt.entity.process_group_instance.name"],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}],"variant":"single","displayedFields":["dt.entity.process_group_instance.name"]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"dt.host.cpu.usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532827},{"identifier":"dt.host.memory.avail.percent","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532828},{"identifier":"dt.host.memory.usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532828},{"identifier":"usage","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":true,"added":1707415532828}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"7":{"type":"data","title":"Traffic - Requests","query":"fetch spans, scanLimitGBytes:2\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n//| filter matchesValue(dt.entity.host_group, \"HOST_GROUP-BA452F1AC26125E2\")\n| filter isNotNull(endpoint.name)\n//| filterOut endpoint.name == \"Images\" or endpoint.name == \"JavaScript\" or endpoint.name == \"CSS\" \n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name }\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| makeTimeseries  count = count(), by:{service}, time: start_time\n| sort count desc\n| limit 10","visualization":"barChart","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"legend":{"hidden":true},"categoricalBarChartSettings":{"categoryAxis":["service"],"categoryAxisLabel":"service","valueAxis":["interval"],"valueAxisLabel":"interval","tooltipVariant":"single"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["count"]},"hiddenLegendFields":["interval"],"valueRepresentation":"absolute","truncationMode":"middle","xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{}},"singleValue":{"label":"service","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"service","trend":{"trendType":"auto","isVisible":true},"showLabel":true},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["count"],"value":"sparkline","id":1734469204922}]},"honeycomb":{"shape":"square","dataMappings":{"value":"interval"},"legend":"auto","displayedFields":["service"],"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}],"variant":"single","displayedFields":["service"]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"count","unitCategory":"unspecified","baseUnit":"none","displayUnit":null,"decimals":0,"suffix":"","delimiter":false,"added":1700683338785}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"8":{"type":"data","title":"Errors - Requests","query":"fetch spans\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n//| filter matchesValue(dt.entity.host_group, \"HOST_GROUP-BA452F1AC26125E2\")\n| filter isNotNull(endpoint.name)\n| filter dt.internal.is_failed == true or request.is_failed == true\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| fieldsAdd timestamp = start_time\n//| fieldsAdd ResponseCode = toLong(http.response.status_code)\n//| filter ResponseCode >= 500 and ResponseCode < 600 \n| makeTimeSeries Errors = count(), by:{service}","visualization":"barChart","visualizationSettings":{"thresholds":[{"id":1,"field":"","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-categorical-color-09-default, #649438)"},"comparator":"≥","label":""},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #cd3741)"},"comparator":"≥","label":""}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"legend":{"hidden":true},"seriesOverrides":[],"categoricalBarChartSettings":{"categoryAxisLabel":"service","valueAxisLabel":"interval","categoryAxis":["service"],"valueAxis":["interval"],"tooltipVariant":"single"},"colorPalette":"log-level","hiddenLegendFields":["interval"],"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["Errors"]},"valueRepresentation":"absolute","xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{},"truncationMode":"middle"},"singleValue":{"label":"service","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"service","trend":{"trendType":"auto","isVisible":true},"showLabel":true},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["Errors"],"value":"sparkline","id":1743172024012}]},"honeycomb":{"shape":"square","dataMappings":{"value":"service"},"legend":"auto","displayedFields":["service"],"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}],"variant":"single","displayedFields":["service"]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"failureRate","unitCategory":"unspecified","baseUnit":"none","displayUnit":null,"decimals":0,"suffix":"","delimiter":false,"added":1700683084361}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"9":{"type":"data","title":"Latency - Requests","query":"fetch spans\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n//| filter matchesValue(dt.entity.host_group, \"HOST_GROUP-BA452F1AC26125E2\")\n| filter isNotNull(endpoint.name)\n//| filterOut endpoint.name == \"Images\" or endpoint.name == \"JavaScript\" or endpoint.name == \"CSS\" \n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name }\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| makeTimeseries  duration = avg(duration), by:{service}, time: start_time\n| sort duration desc\n| limit 10\n\n","visualization":"lineChart","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"auto","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"leftYAxisSettings":{"scale":"linear"},"legend":{"hidden":true},"categoricalBarChartSettings":{"categoryAxis":["service"],"categoryAxisLabel":"service","valueAxis":["interval"],"valueAxisLabel":"interval","tooltipVariant":"single"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["duration"]},"seriesOverrides":[],"hiddenLegendFields":["interval"],"valueRepresentation":"absolute","xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"truncationMode":"middle"},"singleValue":{"label":"service","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"service","trend":{"trendType":"auto","isVisible":true},"showLabel":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[{"fields":["duration"],"value":"sparkline","id":1734469217807}]},"honeycomb":{"shape":"square","dataMappings":{"value":"service"},"legend":"auto","displayedFields":["service"],"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[{"valueAxis":"interval","rangeAxis":""}],"variant":"single","displayedFields":["service"]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"duration","unitCategory":"time","baseUnit":"nanosecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1700627004186}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"11":{"type":"data","title":"🚦 Problems - Last 7 days","query":"fetch events, from: now()-7d\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n| expand affected_entity_ids\n| lookup [fetch dt.entity.service | fields name=entity.name, id=id, namespace=belongs_to[dt.entity.cloud_application_namespace]], \n         sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.service\"\n| lookup [fetch dt.entity.service], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.services\"\n| lookup [fetch dt.entity.service], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.services\"\n| lookup [fetch dt.entity.process_group_instance], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.pgi\"\n| lookup [fetch dt.entity.process_group_instance], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.pgi\"\n| lookup [fetch dt.entity.application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.applications\"\n| lookup [fetch dt.entity.application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.applications\"\n| lookup [fetch dt.entity.mobile_application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.mobile\"\n| lookup [fetch dt.entity.mobile_application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.mobile\"\n| lookup [fetch dt.entity.custom_application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.customapplication\"\n| lookup [fetch dt.entity.custom_application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.customapplication\"\n| lookup [fetch dt.entity.cloud_application], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.cloudapplication\"\n| lookup [fetch dt.entity.cloud_application], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.cloudapplication\"\n| lookup [fetch dt.entity.synthetic_test], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.synthetictest\"\n| lookup [fetch dt.entity.synthetic_test], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.synthetictest\"\n| lookup [fetch dt.entity.http_check], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.httpcheck\"\n| lookup [fetch dt.entity.http_check], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.httpcheck\"\n| lookup [fetch dt.entity.kubernetes_cluster], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.kubernetescluster\"\n| lookup [fetch dt.entity.kubernetes_cluster], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.kubernetescluster\"\n| lookup [fetch dt.entity.host], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.hosts\"\n| lookup [fetch dt.entity.host], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.hosts\"\n| lookup [fetch dt.entity.custom_device], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.customdevices\"\n| lookup [fetch dt.entity.custom_device], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.customdevices\"\n| lookup [fetch dt.entity.hypervisor], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.hypervisor\"\n| lookup [fetch dt.entity.hypervisor], sourceField:root_cause_entity_id, lookupField: id, prefix:\"lookup.rootcause.entity.hypervisor\"\n| lookup [fetch dt.entity.environment], sourceField:affected_entity_ids, lookupField: id, prefix:\"lookup.affected.entity.environment\"\n// Lookup for affected_entity_ids and root_cause_entity_id End\n\n// Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            affectedServices = collectDistinct(lookup.affected.entity.servicesentity.name),\n            affectedPGI = collectDistinct(lookup.affected.entity.pgientity.name),\n            affectedApplications = collectDistinct(lookup.affected.entity.applicationsentity.name),\n            affectedMobile = collectDistinct(lookup.affected.entity.mobileentity.name),\n            affectedCustomApplication = collectDistinct(lookup.affected.entity.customapplicationentity.name),\n            affectedCloudApplication = collectDistinct(lookup.affected.entity.cloudapplicationentity.name),\n            affectedSyntheticTest = collectDistinct(lookup.affected.entity.synthetictestentity.name),\n            affectedHttpCheck = collectDistinct(lookup.affected.entity.httpcheckentity.name),\n            affectedKubernetesCluster = collectDistinct(lookup.affected.entity.kubernetesclusterentity.name),\n            affectedHosts = collectDistinct(lookup.affected.entity.hostsentity.name),\n            affectedCustomDevices = collectDistinct(lookup.affected.entity.customdevicesentity.name),\n            affectedHypervisor = collectDistinct(lookup.affected.entity.hypervisorentity.name),\n            affectedEnvironment = collectDistinct(lookup.affected.entity.environmententity.name),\n            rootCauseServices = collectDistinct(lookup.rootcause.entity.servicesentity.name),\n            rootCausePGI = collectDistinct(lookup.rootcause.entity.pgientity.name),\n            rootCauseApplications = collectDistinct(lookup.rootcause.entity.applicationsentity.name),\n            rootCauseMobile = collectDistinct(lookup.rootcause.entity.mobileentity.name),\n            rootCauseCustomApplication = collectDistinct(lookup.rootcause.entity.customapplicationentity.name),\n            rootCauseSyntheticTest = collectDistinct(lookup.rootcause.entity.synthetictestentity.name),\n            rootCauseHttpCheck = collectDistinct(lookup.rootcause.entity.httpcheckentity.name),\n            rootCauseHosts = collectDistinct(lookup.rootcause.entity.hostsentity.name),\n            rootCauseCustomDevices = collectDistinct(lookup.rootcause.entity.customdevicesentity.name),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n| fieldsAdd currentTime = toTimestamp(now())\n| fieldsAdd status = if((status == \"ACTIVE\"),\"OPEN\", \n                else:if((status == \"CLOSED\"), \"CLOSED\"))\n// Summarzation End - Group Probem Events by Problem ID\n\n\n// Final Result Start\n| fields Status = if((status == \"OPEN\"),\"🔴 OPEN\", \n                  else:if((status == \"CLOSED\"),\"🟢 CLOSED\")),\n         Type = (event.name),\n         SeverityLevel = severityLevel,\n         Description = concat(display_id,\" - \",event.name),         \n         AffectedCount = arraySize(arrayRemoveNulls(arrayConcat(affectedApplications,affectedMobile,affectedCustomApplication,affectedCloudApplication,affectedSyntheticTest,affectedHttpCheck,affectedServices,affectedPGI,affectedKubernetesCluster,affectedHosts,affectedHypervisor,affectedCustomDevices,affectedEnvironment))),\n         Affected = arrayRemoveNulls(arrayConcat(affectedApplications,affectedMobile,affectedCustomApplication,affectedCloudApplication,affectedSyntheticTest,affectedHttpCheck,affectedServices,affectedPGI,affectedKubernetesCluster,affectedHosts,affectedHypervisor,affectedCustomDevices,affectedEnvironment)),\n         RootCause = arrayRemoveNulls(arrayConcat(rootCauseServices,rootCauseHosts)),\n         StartTime = startTime,\n         EndTime =  if((status == \"OPEN\"),\"In Progress\", \n                    else:if((status == \"CLOSED\"),endTime)),   \n      //   Duration = if((status == \"CLOSED\"),problemClosedDuration,\n      //              else:if((status == \"OPEN\"), currentTime-startTime)),\n\n         `Duration (min)` = if((status == \"CLOSED\"),problemClosedDuration,\n                   else:if((status == \"OPEN\"), toDuration(currentTime-startTime))),\n         event.id           \n| sort StartTime, direction:\"descending\"\n| sort Status, direction:\"ascending\"\n| filter in($Service , \"ALL\") OR in(Affected, $Service)\n// Final Result End\n\n","visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":["Status","Type","SeverityLevel","Description","Affected","StartTime","EndTime","event.id","RootCause"],"categoryAxisLabel":"Status,Type,SeverityLevel,Description,Affected,StartTime,EndTime,event.id,RootCause","valueAxis":["AffectedCount","Duration (min)"],"valueAxisLabel":"AffectedCount,Duration (min)","tooltipVariant":"single"},"fieldMapping":{"timestamp":"StartTime","leftAxisValues":["AffectedCount"]},"truncationMode":"middle","xAxisLabel":"StartTime","xAxisIsLabelVisible":false,"valueRepresentation":"absolute","hiddenLegendFields":["AffectedCount","Duration (min)"],"leftYAxisSettings":{}},"singleValue":{"label":"Status","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"Status","trend":{"trendType":"auto","isVisible":false},"showLabel":true},"table":{"rowDensity":"condensed","enableLineWrap":true,"enableSparklines":false,"hiddenColumns":[["AffectedCount"],["Severity"],["Type"]],"lineWrapIds":[["Affected"]],"columnWidths":{"[\"Status\"]":91,"[\"Problem\"]":290,"[\"Affected\"]":321,"[\"RootCause\"]":248,"[\"StartTime\"]":144,"[\"EndTime\"]":211,"[\"Duration (min)\"]":141,"[\"event.id\"]":301,"[\"Severity\"]":null,"[\"Type\"]":null,"[\"AffectedCount\"]":null},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Status"},"displayedFields":["Status"],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[{"valueAxis":"AffectedCount","rangeAxis":""},{"valueAxis":"Duration (min)","rangeAxis":""}],"variant":"single","displayedFields":["Status","Type","SeverityLevel","Description","event.id"]},"valueBoundaries":{"min":"auto","max":"auto"}},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"12":{"type":"data","title":"","query":"fetch spans\n| filter request.is_root_span == true\n| filter isNotNull(endpoint.name)\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| summarize count = count()","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"count","title":"","isEnabled":true,"rules":[{"id":0,"color":{"Default":"var(--dt-colors-charts-categorical-color-01-default, #134fc9)"},"comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-categorical-color-12-default, #cd3741)"},"comparator":"≥","label":""}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":["count"],"categoryAxisLabel":"count","valueAxis":["count"],"valueAxisLabel":"count","tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"TRAFFIC","prefixIcon":"","autoscale":true,"alignment":"center","colorThresholdTarget":"background","recordField":"count","trend":{"trendType":"auto","isVisible":false},"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["dt.davis.event_ids"]],"columnWidths":{},"enableLineWrap":true,"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"count"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"count","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"count","unitCategory":"unspecified","baseUnit":"none","displayUnit":null,"decimals":0,"suffix":"","delimiter":false,"added":1700683423826}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"13":{"type":"data","title":"","query":"fetch spans\n| filter request.is_root_span == true\n| filter isNotNull(endpoint.name)\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| summarize latency = avg(toDouble(duration))\n","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"latency","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":"#AE132D","comparator":"≥","label":"","value":2000000000}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxisLabel":"latency","valueAxisLabel":"latency","categoryAxis":["latency"],"valueAxis":["latency"],"tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"LATENCY","prefixIcon":"","autoscale":false,"alignment":"center","recordField":"latency","sparklineSettings":{"isVisible":false},"colorThresholdTarget":"background","trend":{"trendType":"auto","isVisible":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["dt.davis.event_ids"]],"columnWidths":{},"enableLineWrap":true,"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"latency"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"latency","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"latency","unitCategory":"time","baseUnit":"nanosecond","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1700627482300}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"15":{"type":"data","title":"","query":"fetch spans\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n| filter isNotNull(endpoint.name)\n| filter dt.internal.is_failed == true or request.is_failed == true\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| fieldsAdd grpcError = if(rpc.protocol == \"grpc\", span.events[][exception.message])\n| parse toString(grpcError), \"DATA 'rpc error: code = Code(' LD:grpcErrorCode ')'\"\n| fieldsAdd ResponseCode = toLong(coalesce(toString(grpcErrorCode),toString(http.response.status_code)))\n//| fieldsAdd ResponseCode = toLong(http.response.status_code)\n| filter ResponseCode >= 500 and ResponseCode < 600 \n| summarize Errors = count()","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"Errors","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":"#AE132D","comparator":"≥","label":"","value":2}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":["Errors"],"categoryAxisLabel":"Errors","valueAxis":["Errors"],"valueAxisLabel":"Errors","tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"label":"ERROR-5XX","prefixIcon":"","autoscale":true,"alignment":"center","showLabel":true,"colorThresholdTarget":"background","recordField":"Errors","trend":{"trendType":"auto","isVisible":false},"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Errors"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"Errors","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"failureRate","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1700685486722}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"19":{"type":"data","title":"","query":"fetch logs\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n| filter loglevel == \"ERROR\" or loglevel == \"SEVERE\" or matchesPhrase(content, \"error\")\n| filterOut matchesValue(k8s.deployment.name, \"otelcollectorservice-*\")\n| filterOut isNull(trace_id)\n| lookup [ fetch dt.entity.process_group_instance     \n         | fields name=entity.name, id=id, mz=managementZones, si = runs[dt.entity.service_instance]],\n           sourceField:dt.entity.process_group_instance, lookupField:id, prefix:\"lookup.pgi_\"\n| filterOut isNull(lookup.pgi_si)\n| expand lookup.pgi_si\n| lookup [ fetch dt.entity.service_instance\n         | fields name=entity.name, id=id, servicename =instance_of[dt.entity.service]], \n           sourceField:lookup.pgi_si, lookupField:id ,prefix:\"lookup.si_\"\n| lookup [ fetch dt.entity.service\n         | fields name=entity.name, id=id], \n           sourceField:lookup.si_servicename, lookupField:id ,prefix:\"lookup.service_\"\n| filter in($Service , \"ALL\") OR in(lookup.service_name, $Service)\n//| filter (\"ALL\" == $Service OR $Service ==  toString(lookup.service_name))\n| filterOut matchesPhrase(lookup.service_name, \"background\") | filterOut matchesPhrase(lookup.service_name, \"background\") or matchesPhrase(lookup.service_name, \"health\")\n| summarize `Log Errors` = count()\n","davis":{"enabled":false,"davisVisualization":{}},"visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"Log Errors","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":"#AE132D","comparator":"≥","label":"","value":1}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxisLabel":"Log Errors","valueAxisLabel":"Log Errors","categoryAxis":["Log Errors"],"valueAxis":["Log Errors"],"tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"ERROR-LOGS","prefixIcon":"","autoscale":true,"alignment":"center","colorThresholdTarget":"background","recordField":"Log Errors","trend":{"trendType":"auto","isVisible":false},"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Log Errors"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"Log Errors","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"Process Crashes","unitCategory":"unspecified","baseUnit":"none","displayUnit":null,"decimals":0,"suffix":"","delimiter":false,"added":1700712789842}]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"26":{"type":"data","title":"Errors - Logs","query":"fetch logs\n//| filter dt.security_context == \"EKS\"\n| filter loglevel == \"ERROR\" or loglevel == \"SEVERE\" or matchesPhrase(content, \"error\")\n| lookup [ fetch dt.entity.process_group_instance     \n         | fields name=entity.name, id=id, mz=managementZones, si = runs[dt.entity.service_instance]],\n           sourceField:dt.entity.process_group_instance, lookupField:id, prefix:\"lookup.pgi_\"\n| filterOut isNull(lookup.pgi_si)\n| expand lookup.pgi_si\n| lookup [ fetch dt.entity.service_instance\n         | fields name=entity.name, id=id, servicename =instance_of[dt.entity.service]], \n           sourceField:lookup.pgi_si, lookupField:id ,prefix:\"lookup.si_\"\n| lookup [ fetch dt.entity.service\n         | fields name=entity.name, id=id], \n           sourceField:lookup.si_servicename, lookupField:id ,prefix:\"lookup.service_\"\n| filterOut matchesPhrase(lookup.service_name, \"background\") | filterOut matchesPhrase(lookup.service_name, \"background\") or matchesPhrase(lookup.service_name, \"health\")\n| filter in($Service , \"ALL\") OR in(lookup.service_name, $Service)\n| fields timestamp, Service = lookup.service_name, Process = dt.process.name, trace_id, content\n| makeTimeseries  `Log Errors` = count(), by:{Process}","davis":{"enabled":false,"davisVisualization":{}},"visualization":"barChart","visualizationSettings":{"thresholds":[],"chartSettings":{"gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"legend":{"hidden":true},"colorPalette":"log-level","categoricalBarChartSettings":{"categoryAxis":"Process","categoryAxisLabel":"Process","valueAxis":"interval","valueAxisLabel":"interval"},"fieldMapping":{"timestamp":"timeframe","leftAxisValues":["Log Errors"],"leftAxisDimensions":["Process"],"fields":[],"values":[]},"hiddenLegendFields":[],"valueRepresentation":"absolute","xAxisLabel":"timeframe","xAxisIsLabelVisible":false,"leftYAxisSettings":{}},"singleValue":{"showLabel":true,"label":"Process","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"Process","trend":{"trendType":"auto","isVisible":true}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Process"},"displayedFields":["Process"],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"crashes","unitCategory":"unspecified","baseUnit":"none","displayUnit":null,"decimals":0,"suffix":"","delimiter":false,"added":1700791178886}]},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"30":{"type":"data","title":"Top 10 Most Frequent Requests","query":"fetch spans\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n| filter isNotNull(endpoint.name)\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| summarize {Count = count(),\n             Latency = median(duration), \n             Errors = countIf(dt.internal.is_failed == true)}, \n             by: {Service = service,Request = endpoint.name}\n//| fieldsAdd Service_Request = concat(Service, \" - \", Request)\n//| fields Service_Request, Count,Latency,  Errors\n| sort Count desc\n| limit 10","davis":{"enabled":false,"davisVisualization":{}},"visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"Errors","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"},"comparator":"≥","label":"","value":1}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":["Service","Request"],"categoryAxisLabel":"Service,Request","valueAxis":["Count","Latency","Errors"],"valueAxisLabel":"Count,Latency,Errors","tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"Service","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"Service","trend":{"trendType":"auto","isVisible":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["Errors"],["Latency"]],"lineWrapIds":[["Service"]],"columnWidths":{"[\"service\"]":163,"[\"url\"]":434,"[\"cnt\"]":69,"[\"Service\"]":309.78125,"[\"Request\"]":178.171875,"[\"Count\"]":85.515625,"[\"Latency\"]":157.921875,"[\"Errors\"]":392.609375},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"category":"Service","value":"Request"}},"histogram":{"dataMappings":[{"valueAxis":"Count","rangeAxis":""},{"valueAxis":"Errors","rangeAxis":""},{"valueAxis":"Latency","rangeAxis":""}],"variant":"single","displayedFields":["Service","Request"]},"valueBoundaries":{"min":"auto","max":"auto"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"31":{"type":"data","title":"Top 10 Slowest Requests","query":"fetch spans\n| filter request.is_root_span == true\n| filter isNotNull(endpoint.name)\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| summarize {LatencyMedian = median(duration),\n             Count = count(),\n             Errors = countIf(dt.internal.is_failed == true)}, \n             by: {Service = service,Request = endpoint.name}\n//| fieldsAdd Service_Request = concat(Service, \" - \", Request)\n//| fields Service_Request, Count,Latency,  Errors\n| sort LatencyMedian desc\n| limit 10","davis":{"enabled":false,"davisVisualization":{}},"visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"Errors","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"},"comparator":"≥","label":"","value":1}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":["Service","Request"],"categoryAxisLabel":"Service,Request","valueAxis":["LatencyMedian","Count","Errors"],"valueAxisLabel":"LatencyMedian,Count,Errors","tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"Service","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"Service","trend":{"trendType":"auto","isVisible":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["Errors"]],"lineWrapIds":[],"columnWidths":{"[\"service\"]":163,"[\"url\"]":434,"[\"cnt\"]":69,"[\"Service\"]":204,"[\"Request\"]":381,"[\"Latency\"]":127,"[\"Count\"]":86,"[\"Errors\"]":88},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"category":"Service","value":"Request"}},"histogram":{"dataMappings":[{"valueAxis":"Count","rangeAxis":""},{"valueAxis":"Errors","rangeAxis":""},{"valueAxis":"LatencyMedian","rangeAxis":""}],"variant":"single","displayedFields":["Service","Request"]},"valueBoundaries":{"min":"auto","max":"auto"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"32":{"type":"data","title":"Top 10 Requests with Errors","query":"fetch spans\n| filter request.is_root_span == true\n| filter dt.internal.is_failed == true or request.is_failed == true \n| filter isNotNull(endpoint.name)\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| fieldsAdd grpcError = if(rpc.protocol == \"grpc\", span.events[][exception.message])\n| parse toString(grpcError), \"DATA 'rpc error: code = Code(' LD:grpcErrorCode ')'\"\n//| fieldsAdd grpcErrorCode = if(isNotNull(grpcErrorCode), grpcErrorCode, else:toString(grpcError))\n| fieldsAdd ResponseCode = coalesce(toString(grpcErrorCode),toString(http.response.status_code))\n//| filter ResponseCode == 400 or (ResponseCode >= 500 and ResponseCode < 600) \n| summarize {Count = count(),\n             Latency = median(duration)}, \n             by: {Service = service,Request = endpoint.name, ResponseCode}\n//| filterOut isNull(ResponseCode)\n| fields Service, Request, ResponseCode = toLong(ResponseCode), Count, Latency\n| sort Count desc\n| limit 10","davis":{"enabled":false,"davisVisualization":{}},"visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"Errors","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"≥","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-categorical-themed-fireplace-color-01-default, #ae132d)"},"comparator":"≥","label":"","value":1}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxisLabel":"Service,Request","valueAxisLabel":"ResponseCode,Count,Latency","categoryAxis":["Service","Request"],"valueAxis":["ResponseCode","Count","Latency"],"tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"Service","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"Service","trend":{"trendType":"auto","isVisible":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["Latency"]],"lineWrapIds":[],"columnWidths":{"[\"service\"]":163,"[\"url\"]":434,"[\"cnt\"]":69,"[\"Service\"]":225.53125,"[\"Request\"]":273.25,"[\"Errors\"]":87.875,"[\"ResponseCode\"]":140.53125,"[\"Latency\"]":97.921875},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"category":"Service","value":"Request"}},"histogram":{"dataMappings":[{"valueAxis":"ResponseCode","rangeAxis":""},{"valueAxis":"Count","rangeAxis":""},{"valueAxis":"Latency","rangeAxis":""}],"variant":"single","displayedFields":["Service","Request"]},"valueBoundaries":{"min":"auto","max":"auto"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"34":{"type":"markdown","title":"","content":"###  🌐 Service Request Analytics - Requests, Latency, Errors & Exceptions"},"41":{"type":"data","title":"","query":"fetch spans\n| filter request.is_root_span == TRUE\n//| filter dt.security_context == \"EKS\"\n//| filter matchesValue(dt.entity.host_group, \"HOST_GROUP-BA452F1AC26125E2\")\n| filter isNotNull(endpoint.name)\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| summarize  FailureRate = avg(if(request.is_failed == true, 100, else: 0))\n| fieldsAdd SLO = toDouble(100-FailureRate)\n| fieldsRemove FailureRate","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"SLO","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":">","label":"","value":99},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":"","value":98},{"id":2,"color":"#AE132D","comparator":">","label":"","value":0}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":["SLO"],"categoryAxisLabel":"SLO","valueAxis":["SLO"],"valueAxisLabel":"SLO","tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"label":"SLO-ERROR","prefixIcon":"","autoscale":true,"alignment":"center","showLabel":true,"recordField":"SLO","colorThresholdTarget":"background","trend":{"trendType":"auto","isVisible":false},"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"SLO"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"SLO","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"SLO","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1700685486722}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"43":{"type":"data","title":"","query":"fetch spans\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n//| filter matchesValue(dt.entity.host_group, \"HOST_GROUP-BA452F1AC26125E2\")\n| filter isNotNull(endpoint.name)\n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name}\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| fieldsAdd SlowRequest = if(toLong(duration) > 2000000000, \"Slow\", else:\"Fast\")\n| summarize SlowRequestRate = avg(if(SlowRequest == \"Slow\", 100, else: 0))\n| fieldsAdd SLO = toDouble(100-SlowRequestRate)\n| fieldsRemove SlowRequestRate","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"SLO","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"≥","label":"","value":98},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":"","value":97},{"id":2,"color":"#AE132D","comparator":">","label":"","value":0}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxis":["SLO"],"categoryAxisLabel":"SLO","valueAxis":["SLO"],"valueAxisLabel":"SLO","tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"label":"SLO-LATENCY","prefixIcon":"","autoscale":true,"alignment":"center","showLabel":true,"recordField":"SLO","colorThresholdTarget":"background","trend":{"trendType":"auto","isVisible":false},"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"SLO"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"SLO","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"SLO","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1700685486722}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"44":{"type":"data","title":"","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n//| filter matchesValue(vulnerability.risk.level, \"HIGH\") or matchesValue(vulnerability.risk.level, \"CRITICAL\")\n| filter event.level==\"ENTITY\"\n//| filter isNotNull(related_entities.services.names)\n| filter in($Service , \"ALL\") OR in(related_entities.services.names, $Service)\n// get latest snapshot\n| sort timestamp, direction:\"descending\"\n| summarize {\n  vulnerability.risk.level = takeFirst(vulnerability.risk.level),\n  vulnerability.parent.mute.status = takeFirst(vulnerability.parent.mute.status),\n    vulnerability.mute.status = takeFirst(vulnerability.mute.status),\n  vulnerability.resolution.status = takeFirst(vulnerability.resolution.status)\n}, by: {vulnerability.id,affected_entity.id}\n // end of get latest snapshot\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter vulnerability.parent.mute.status != \"MUTED\" AND vulnerability.mute.status != \"MUTED\"\n| summarize total=arraySize(collectDistinct(vulnerability.id))\n| fields `Open vulnerabilities` = coalesce(total, 0)","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"Open vulnerabilities","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"=","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":"#AE132D","comparator":">","label":"","value":0}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"truncationMode":"middle","categoricalBarChartSettings":{"categoryAxis":["Open vulnerabilities"],"categoryAxisLabel":"Open vulnerabilities","valueAxis":["Open vulnerabilities"],"valueAxisLabel":"Open vulnerabilities","tooltipVariant":"single"}},"singleValue":{"label":"SECURITY (OPEN)","prefixIcon":"SecurityHighIcon","autoscale":true,"alignment":"center","showLabel":true,"colorThresholdTarget":"background","recordField":"Open vulnerabilities","trend":{"trendType":"auto","isVisible":false},"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Open vulnerabilities"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"Open vulnerabilities","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"failureRate","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1700685486722}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"45":{"type":"data","title":"Top 10 Exceptions","query":"fetch spans\n| filter request.is_root_span == true\n//| filter dt.security_context == \"EKS\"\n| filter span.kind == \"server\"\n| filterOut endpoint.name == \"Images\" or endpoint.name == \"JavaScript\" or endpoint.name == \"CSS\" \n| lookup [ fetch dt.entity.service ], \n         lookupField:id, sourceField:dt.entity.service, \n         fields: {service = entity.name }\n| filter in($Service , \"ALL\") OR in(service, $Service)\n| fieldsAdd exception.message = span.events[0][exception.message]\n| fieldsAdd exception.class = span.events[0][exception.type]\n| fieldsAdd eventname = span.events[0][span_event.name]\n| filter eventname == \"exception\"\n// | lookup [ fetch dt.entity.process_group_instance     \n//          | fields name=entity.name, id=id],\n//            sourceField:dt.entity.process_group_instance, lookupField:id, prefix:\"lookup.pgi_\"\n//| summarize Count = count(), by:{Service = service, Process = lookup.pgi_name, Class = exception.class, Message = exception.message}\n| summarize Count = count(), by:{Service = service, Request = endpoint.name, Class = exception.class, Message = exception.message}\n| sort Count desc\n//| fields Service, Process, Class, Message, Count\n//| fields Service = replaceString(Service, \"[eks][prod] hipstershop.\",\"\" ), Message, Count\n| fields Service, Request, Message, Count\n| limit 10\n","davis":{"enabled":false,"davisVisualization":{}},"visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxisLabel":"Service,Request,Message","valueAxisLabel":"Count","categoryAxis":["Service","Request","Message"],"valueAxis":["Count"],"tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"Service","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"Service","trend":{"trendType":"auto","isVisible":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["Message"]],"columnWidths":{"[\"Service\"]":264.25,"[\"Request\"]":100.171875,"[\"Message\"]":600,"[\"Count\"]":85.515625},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"category":"Service","value":"Request"}},"histogram":{"dataMappings":[{"valueAxis":"Count","rangeAxis":""}],"variant":"single","displayedFields":["Service","Request","Message"]},"valueBoundaries":{"min":"auto","max":"auto"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"48":{"type":"data","title":"🔎 Log Analytics - Errors","query":"fetch logs\n| filter loglevel == \"ERROR\" or loglevel == \"SEVERE\" //or matchesPhrase(content, \"error\")\n| lookup [ fetch dt.entity.process_group_instance     \n         | fields name=entity.name, id=id, mz=managementZones, si = runs[dt.entity.service_instance]],\n           sourceField:dt.entity.process_group_instance, lookupField:id, prefix:\"lookup.pgi_\"\n| expand lookup.pgi_si\n| lookup [ fetch dt.entity.service_instance\n         | fields name=entity.name, id=id, servicename =instance_of[dt.entity.service]], \n           sourceField:lookup.pgi_si, lookupField:id ,prefix:\"lookup.si_\"\n| lookup [ fetch dt.entity.service\n         | fields name=entity.name, id=id], \n           sourceField:lookup.si_servicename, lookupField:id ,prefix:\"lookup.service_\"\n| filter in($Service , \"ALL\") OR in(lookup.service_name, $Service)\n//| filter (\"ALL\" == $Service OR $Service ==  toString(lookup.service_name))\n| filterOut matchesPhrase(lookup.service_name, \"background\") or matchesPhrase(lookup.service_name, \"health\")\n| fields Loglevel = concat(\"🔴\",\" \",loglevel),\n         Timestamp = timestamp, \n         Service = lookup.service_name, \n         Process = dt.process.name, \n         trace_id,\n         Content = content\n//| fields timestamp, Process = dt.process.name, trace_id, content\n| sort Timestamp desc\n| limit 100\n","davis":{"enabled":false,"davisVisualization":{}},"visualization":"table","visualizationSettings":{"thresholds":[],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"relative","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"categoricalBarChartSettings":{"categoryAxisLabel":"Loglevel,Timestamp,Service,Content","valueAxisLabel":"","categoryAxis":["Loglevel","Timestamp","Service","Content"],"valueAxis":[],"tooltipVariant":"single"},"truncationMode":"middle"},"singleValue":{"showLabel":true,"label":"Loglevel","prefixIcon":"","autoscale":true,"alignment":"center","recordField":"Loglevel","trend":{"trendType":"auto","isVisible":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["timestamp"],["Service"],["Process"],["trace_id"],["content"],["Content"]],"columnWidths":{},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Loglevel"},"displayedFields":["Service"],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[],"variant":"single","displayedFields":["Loglevel","Service","Content"]},"valueBoundaries":{"min":"auto","max":"auto"}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"50":{"type":"data","title":"","query":"fetch events\n| filter event.kind == \"DAVIS_PROBLEM\"\n| sort timestamp desc\n| expand affected_entity_ids\n| lookup [fetch dt.entity.application | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.application\"\n| lookup [fetch dt.entity.mobile_application | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.mobile\"\n| lookup [fetch dt.entity.custom_application | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.custom\"\n| lookup [fetch dt.entity.synthetic_test | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.synthetictest\"\n| lookup [fetch dt.entity.http_check | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.httpcheck\"\n| lookup [fetch dt.entity.process_group | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.pg\"\n| lookup [fetch dt.entity.service | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.service\"\n| lookup [fetch dt.entity.host | fields name=entity.name, id=id, mz=managementZones], sourceField:affected_entity_ids, lookupField:id, prefix:\"lookup.affected.entity.host\"\n\n// First Summarzation Start - Group Probem Events by Problem ID\n| summarize {startTime = takeFirst(event.start),\n            endTime = takeFirst(event.end),\n            problemClosedDuration = takeFirst(resolved_problem_duration),\n            status = takeFirst(event.status),\n            event.name = takeFirst(event.name),\n            severityLevel = takeFirst(event.category),\n            affected = takeFirst(affected_entity_ids),\n            rootCause = takeFirst(root_cause_entity_id),\n            dt.davis.is_duplicate = takeFirst(dt.davis.is_duplicate),\n            event.id = takeFirst(event.id)}, \n            by:{display_id}\n| filter `dt.davis.is_duplicate` == false\n// First Summarzation End - Group Probem Events by Problem ID\n\n// Dashboard Fitlers Start\n\n// Dashboard Fitlers End\n\n// Second Summarzation Start - Summarize Open Problems Count\n| summarize Open = countIf(status == \"ACTIVE\"), Closed = countIf(status == \"CLOSED\"), Total = count()\n// | fieldsAdd State = if(Open > 0, \"🔴\", else: \"🟢\")\n// | fields Problems = concat(State, \" \", Open, \"/\", Total)\n\n//| fieldsAdd State = if(Open > 0, \"1\", else: 0)\n//| fields Problems = concat(State, \" \", Open,\"-Open\", \"/\", Total, \"-Total\")\n// Second Summarzation End - Summarize Open Problems Count","visualization":"singleValue","visualizationSettings":{"thresholds":[{"id":1,"field":"Open","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"=","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":"#AE132D","comparator":">","label":"","value":0}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"truncationMode":"middle","categoricalBarChartSettings":{"categoryAxis":["Open","Closed","Total"],"categoryAxisLabel":"Open,Closed,Total","valueAxis":["Open","Closed","Total"],"valueAxisLabel":"Open,Closed,Total","tooltipVariant":"single"}},"singleValue":{"showLabel":true,"label":"PROBLEMS (OPEN)","prefixIcon":"ErrorIcon","autoscale":true,"alignment":"center","recordField":"Open","colorThresholdTarget":"background","trend":{"trendType":"auto","isVisible":false},"sparklineSettings":{}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[],"lineWrapIds":[["dt.davis.event_ids"]],"columnWidths":{},"enableLineWrap":true,"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Open"},"displayedFields":[null],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"blue"},"histogram":{"dataMappings":[{"valueAxis":"Open","rangeAxis":""},{"valueAxis":"Closed","rangeAxis":""},{"valueAxis":"Total","rangeAxis":""}],"variant":"single","displayedFields":[]},"valueBoundaries":{"min":"auto","max":"auto"}},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}},"51":{"type":"data","title":"🔐 Open Vulnerabilities - High & Critical","query":"fetch events\n| filter dt.system.bucket==\"default_security_events\"\n| filter event.provider==\"Dynatrace\"\n| filter event.type==\"VULNERABILITY_STATE_REPORT_EVENT\"\n//| filter matchesValue(vulnerability.risk.level, \"HIGH\") or matchesValue(vulnerability.risk.level, \"CRITICAL\")\n| filter event.level==\"ENTITY\"\n| filter in($Service , \"ALL\") OR in(related_entities.services.names, $Service)\n// get latest snapshot\n| sort timestamp, direction:\"descending\"\n| expand related_entities.services.names\n| summarize {\n  vulnerability.risk.level = takeFirst(vulnerability.risk.level),\n  vulnerability.parent.mute.status = takeFirst(vulnerability.parent.mute.status),\n  vulnerability.mute.status = takeFirst(vulnerability.mute.status),\n  vulnerability.resolution.status = takeFirst(vulnerability.resolution.status),\n  vulnerability.description = takeFirst(vulnerability.description),\n  vulnerability.affected_entity.name = collectDistinct(related_entities.services.names),\n  vulnerability.affected_processes = collectDistinct(affected_entity.name)},\n  by: {vulnerability.id,event.description}\n // end of get latest snapshot\n| filter vulnerability.resolution.status == \"OPEN\"\n| filter vulnerability.parent.mute.status != \"MUTED\" AND vulnerability.mute.status != \"MUTED\"\n| fields Status = \"🔴 OPEN\", \n         RiskLevel = vulnerability.risk.level, \n         Description = event.description, \n         Details = toString(vulnerability.description),\n         AffectedServices = arrayRemoveNulls(asArray(vulnerability.affected_entity.name)),\n         AffectedProccesses = arrayRemoveNulls(asArray(vulnerability.affected_processes)),\n         vulnerability.id\n| filter in($Service , \"ALL\") OR in(AffectedServices, $Service)\n\n//| summarize total=arraySize(collectDistinct(vulnerability.id))\n// | fields `Open vulnerabilities` = coalesce(total, 0)","visualization":"table","visualizationSettings":{"thresholds":[{"id":1,"field":"","title":"","isEnabled":true,"rules":[{"id":0,"color":"#0D9C29","comparator":"=","label":"","value":0},{"id":1,"color":{"Default":"var(--dt-colors-charts-categorical-color-14-default, #d56b1a)"},"comparator":"≥","label":""},{"id":2,"color":{"Default":"var(--dt-colors-charts-security-risk-level-critical-default, #8a0012)"},"comparator":">","label":"","value":0}]}],"chartSettings":{"xAxisScaling":"analyzedTimeframe","gapPolicy":"connect","circleChartSettings":{"groupingThresholdType":"absolute","groupingThresholdValue":0,"valueType":"relative"},"categoryOverrides":{},"truncationMode":"middle","categoricalBarChartSettings":{"categoryAxis":["Status","RiskLevel","Description","Details","AffectedServices","AffectedProccesses","vulnerability.id"],"categoryAxisLabel":"Status,RiskLevel,Description,Details,AffectedServices,AffectedProccesses,vulnerability.id","valueAxis":[],"valueAxisLabel":"","tooltipVariant":"single"}},"singleValue":{"label":"Open Vulnerabilities","prefixIcon":"SecurityHighIcon","autoscale":true,"alignment":"center","showLabel":true,"colorThresholdTarget":"background","recordField":"Status","trend":{"trendType":"auto","isVisible":false}},"table":{"rowDensity":"condensed","enableSparklines":false,"hiddenColumns":[["Details"],["AffectedProccesses"]],"lineWrapIds":[["vulnerability.affected_entity.name"],["AffectedServices"],["AffectedProccesses"],["vulnerability.description"],["test"],["Details"],["Description"]],"columnWidths":{"[\"event.description\"]":474.328125,"[\"vulnerability.risk.level\"]":188.484375,"[\"vulnerability.affected_entity.name\"]":541.078125,"[\"vulnerability.id\"]":600},"columnTypeOverrides":[]},"honeycomb":{"shape":"square","dataMappings":{"value":"Status"},"displayedFields":["RiskLevel"],"legend":{"hidden":false,"position":"auto"},"colorMode":"color-palette","colorPalette":"categorical"},"histogram":{"dataMappings":[],"variant":"single","displayedFields":["Status","RiskLevel","Description","Details","vulnerability.id"]},"valueBoundaries":{"min":"auto","max":"auto"},"unitsOverrides":[{"identifier":"failureRate","unitCategory":"percentage","baseUnit":"percent","displayUnit":null,"decimals":2,"suffix":"","delimiter":false,"added":1700685486722}]},"davis":{"davisVisualization":{}},"querySettings":{"maxResultRecords":1000,"defaultScanLimitGbytes":500,"maxResultMegaBytes":100,"defaultSamplingRatio":10,"enableSampling":false}}},"layouts":{"0":{"x":8,"y":6,"w":8,"h":4},"1":{"x":0,"y":6,"w":8,"h":4},"7":{"x":0,"y":2,"w":8,"h":4},"8":{"x":16,"y":2,"w":8,"h":4},"9":{"x":8,"y":2,"w":8,"h":4},"11":{"x":0,"y":10,"w":24,"h":4},"12":{"x":12,"y":0,"w":3,"h":2},"13":{"x":15,"y":0,"w":3,"h":2},"15":{"x":18,"y":0,"w":3,"h":2},"19":{"x":21,"y":0,"w":3,"h":2},"26":{"x":16,"y":6,"w":8,"h":4},"30":{"x":0,"y":26,"w":12,"h":5},"31":{"x":12,"y":26,"w":12,"h":5},"32":{"x":0,"y":31,"w":12,"h":5},"34":{"x":0,"y":25,"w":24,"h":1},"41":{"x":6,"y":0,"w":3,"h":2},"43":{"x":9,"y":0,"w":3,"h":2},"44":{"x":3,"y":0,"w":3,"h":2},"45":{"x":12,"y":31,"w":12,"h":5},"48":{"x":0,"y":19,"w":24,"h":6},"50":{"x":0,"y":0,"w":3,"h":2},"51":{"x":0,"y":14,"w":24,"h":5}},"importedWithCode":false,"settings":{}}